#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\begin_modules
theorems-ams
algolyx
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\M}{\mathcal{M}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\I}{\mathcal{I}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\X}{\mathcal{X}}
\end_inset


\begin_inset FormulaMacro
\renewcommand{\O}{\mathcal{O}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\P}{\mathcal{P}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\e}{\mathcal{E}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\E}{\mathbb{E}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\R}{\mathbb{R}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\L}{\mathcal{L}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\G}{\mathcal{G}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\Z}{\mathbb{Z}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\S}{\mathcal{S}}
\end_inset


\end_layout

\begin_layout Title
The Fast-Cut Algorithm
\end_layout

\begin_layout Section
Analysis of Basic Algorithm
\end_layout

\begin_layout Standard
The basic version of the randomized minimum cut algorithm has the following
 property: for any minimum cut 
\begin_inset Formula $(S,\bar{S})$
\end_inset

, it returns 
\begin_inset Formula $(S,\bar{S})$
\end_inset

 with probability at least 
\begin_inset Formula $1/{n \choose 2}$
\end_inset

.
\end_layout

\begin_layout Lemma
This implies there are at most 
\begin_inset Formula ${n \choose 2}$
\end_inset

 distinct minimum cuts.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $\e_{S}$
\end_inset

 be the event that the algorithm returns 
\begin_inset Formula $(S,\bar{S})$
\end_inset

.
 The 
\begin_inset Formula $\e_{S}$
\end_inset

 are disjoint because we only return one cut at a time.
 Thus 
\begin_inset Formula $\sum_{S}\Pr[\e_{S}]\leq1$
\end_inset

.
 For each minimum cut 
\begin_inset Formula $(S,\bar{S})$
\end_inset

, 
\begin_inset Formula $\Pr[\e_{S}]\geq1/{n \choose 2}$
\end_inset

.
 If there were more than 
\begin_inset Formula ${n \choose 2}$
\end_inset

 minimum cuts, then 
\begin_inset Formula $\sum_{S}\Pr[\e_{S}]>1$
\end_inset

, a contradiction.
\end_layout

\begin_layout Standard
We'd like to improve the success probability of the algorithm.
 To do so, we run the algorithm 
\begin_inset Formula $k$
\end_inset

 times with independent coin flips and keep the minimum of the observed
 cuts.
 The failure probability for a single run is 
\begin_inset Formula $1-1/{n \choose 2}$
\end_inset

.
 For 
\begin_inset Formula $k$
\end_inset

 runs, we have 
\begin_inset Formula $\big(1-1/{n \choose 2}\big)^{k}$
\end_inset

 due to independence.
 Then the success probability 
\begin_inset Formula $\S$
\end_inset

 over all runs is 
\begin_inset Formula 
\begin{align*}
\S & \geq1-\big(1-\frac{1}{{n \choose 2}}\big)^{k}\\
 & \geq1-\big(1-\frac{2}{n^{2}}\big)^{k}\\
 & \geq1-e^{-\frac{2k}{n^{2}}}.
\end{align*}

\end_inset

Choose 
\begin_inset Formula $k$
\end_inset

 to cancel the denominator and give an extra log term: 
\begin_inset Formula $k=\alpha n^{2}\log n$
\end_inset

.
 Thus
\begin_inset Formula 
\begin{align*}
\S & \geq1-e^{\frac{-2\alpha n^{2}\log n}{n^{2}}}\\
 & =1-n^{-2\alpha}.
\end{align*}

\end_inset

By making 
\begin_inset Formula $\alpha$
\end_inset

 large, we get any polynomially small failure probability we desire.
 Thus 
\begin_inset Formula $k=\Theta(n^{2}\log n)$
\end_inset

 iterations is sufficient.
\end_layout

\begin_layout Section
Improving the Algorithm
\end_layout

\begin_layout Standard
Recall that a failure in iteration 
\begin_inset Formula $i$
\end_inset

 happens with probability at most 
\begin_inset Formula $\frac{2}{n+1-i}$
\end_inset

.
 This implies failures are much more likely in late iterations (from 
\begin_inset Formula $\Theta(1/n)$
\end_inset

 at the beginning to constant at the end).
 Intuitively, we can save time by redoing mostly the later iterations.
\end_layout

\begin_layout Standard
To more efficiently reuse early executions, use the following outline:
\end_layout

\begin_layout Enumerate
Create two copies 
\begin_inset Formula $H_{1},H_{2}$
\end_inset

 of 
\begin_inset Formula $G$
\end_inset

.
\end_layout

\begin_layout Enumerate
Run contractions independently on both 
\begin_inset Formula $H_{1},H_{2}$
\end_inset

 for a 
\begin_inset Quotes eld
\end_inset

while
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate
Recurse on 
\begin_inset Formula $H_{1},H_{2}$
\end_inset

 independently.
\end_layout

\begin_layout Standard
Here, we choose a 
\begin_inset Quotes eld
\end_inset

while
\begin_inset Quotes erd
\end_inset

 to mean until right before the probability of the combined contractions
 hits 
\begin_inset Formula $1/2$
\end_inset

 (for one run, say 
\begin_inset Formula $H_{1}$
\end_inset

).
 At what target size 
\begin_inset Formula $t(n)$
\end_inset

 does the (combined) failure probability hit 
\begin_inset Formula $1/2$
\end_inset

?
\end_layout

\begin_layout Standard
To answer this question, we find a lower bound on the success probability
 of contractions going from size 
\begin_inset Formula $n$
\end_inset

 to size 
\begin_inset Formula $t$
\end_inset

.
 Recall the success probability is
\begin_inset Formula 
\begin{align*}
\prod_{i=1}^{n-1-t}\frac{n-1-i}{n+1-i} & =\frac{t(t-1)}{n(n-1)}\\
 & \approx\frac{1}{2}.
\end{align*}

\end_inset

Solving for 
\begin_inset Formula $t(n)$
\end_inset

:
\begin_inset Formula 
\begin{align*}
t^{2} & =\frac{n^{2}}{2}\\
t & \approx\frac{n}{\sqrt{2}}.
\end{align*}

\end_inset

To be precise, 
\begin_inset Formula $t(n)=\lceil1+n/\sqrt{2}\rceil$
\end_inset

 guarantees success probability at least 
\begin_inset Formula $1/2$
\end_inset

.
 To have 
\begin_inset Formula $t(n)<n$
\end_inset

, we need 
\begin_inset Formula $n>6$
\end_inset

; for 
\begin_inset Formula $n\leq6$
\end_inset

 we use exhaustive search.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Algorithm (num)
if 
\begin_inset Formula $n\leq6$
\end_inset


\end_layout

\begin_deeper
\begin_layout Algorithm (num)
* Run exhaustive search to find a minimum cut.
\end_layout

\end_deeper
\begin_layout Algorithm (num)
else
\end_layout

\begin_deeper
\begin_layout Algorithm (num)
* Let 
\begin_inset Formula $H_{1},H_{2}$
\end_inset

 be two copies of 
\begin_inset Formula $G$
\end_inset

.
\end_layout

\begin_layout Algorithm (num)
* Independently randomly contract 
\begin_inset Formula $H_{1},H_{2}$
\end_inset

 down to size
\begin_inset Formula 
\[
t=\lceil1+\frac{n}{\sqrt{2}}\rceil.
\]

\end_inset


\end_layout

\begin_layout Algorithm (num)
* Return the smaller of Fast-Cut
\begin_inset Formula $(H_{1})$
\end_inset

 and Fast-Cut
\begin_inset Formula $(H_{2})$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Algorithm (num)
endif
\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Fast-Cut
\begin_inset Formula $(G)$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Runtime Analysis
\end_layout

\begin_layout Standard
We know exhaustive search is 
\begin_inset Formula $\O(1)$
\end_inset

 and contractions are 
\begin_inset Formula $\O(n^{2})$
\end_inset

 for each of 
\begin_inset Formula $H_{1},H_{2}$
\end_inset

.
 Thus we have the recurrence:
\begin_inset Formula 
\begin{align*}
T(n) & =\O(n^{2})+2T(n/\sqrt{2})\\
T(n) & =\Theta(1)\text{ for }n\leq6
\end{align*}

\end_inset

We have 
\begin_inset Formula $\log_{\sqrt{2}}n$
\end_inset

 levels of recursion.
 On level 
\begin_inset Formula $i$
\end_inset

, we have 
\begin_inset Formula $2^{i}$
\end_inset

 instances of size 
\begin_inset Formula 
\[
\frac{n}{\sqrt{2}^{i}}
\]

\end_inset

each, doing work 
\begin_inset Formula 
\[
\O\bigg(\big(\frac{n}{\sqrt{2}^{i}}\big)^{2}\bigg)=\O\big(\frac{n^{2}}{2^{i}}\big).
\]

\end_inset

Thus the total work on level 
\begin_inset Formula $i$
\end_inset

 is 
\begin_inset Formula 
\[
2^{i}\cdot\O\big(\frac{n^{2}}{2^{i}}\big)=\O(n^{2}).
\]

\end_inset

This gives 
\begin_inset Formula $T(n)=\O(n^{2}\log n)$
\end_inset

.
 We can also use the Master Theorem to see the same result.
\end_layout

\begin_layout Section
Success Probability Analysis
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $P(n)$
\end_inset

 be a lower bound on the success probability of the algorithm for graphs
 of size 
\begin_inset Formula $n$
\end_inset

.
 Note that 
\begin_inset Formula $1/2$
\end_inset

 is the probability that the initial contractions were successful and 
\begin_inset Formula $P(\lceil1+n/\sqrt{2}\rceil)$
\end_inset

 is the probability that the recursive call succeeds.
 We have two independent chances represented by 
\begin_inset Formula $H_{1},H_{2}$
\end_inset

 and we only need one of them to succeed.
 So we obtain:
\begin_inset Formula 
\begin{align*}
P(n) & =1\text{ for }n\leq6.\\
P(n) & \geq1-\big(1-\frac{1}{2}P(\lceil1+\frac{n}{\sqrt{2}}\rceil)\big)^{2}\\
 & \approx1-\big(1-\frac{1}{2}P(\frac{n}{\sqrt{2}})\big)^{2}\\
 & =P(\frac{n}{\sqrt{2}})-\frac{1}{4}\big(P(\frac{n}{\sqrt{2}})\big)^{2}.
\end{align*}

\end_inset

Let 
\begin_inset Formula $n=\sqrt{2}^{k}$
\end_inset

, then 
\begin_inset Formula 
\[
P(\sqrt{2}^{k})\geq P(\sqrt{2}^{k-1})-\frac{1}{4}\big(P\sqrt{2}^{k-1})\big)^{2}
\]

\end_inset

Let 
\begin_inset Formula $p(k)=P(\sqrt{2}^{k})$
\end_inset

 to obtain
\begin_inset Formula 
\[
p(k)\geq p(k-1)-\frac{1}{4}(p(k-1))^{2}
\]

\end_inset

Then, let 
\begin_inset Formula $q(k)=4/p(k)-1$
\end_inset

, so 
\begin_inset Formula $p(k)=4/(q(k)+1)$
\end_inset

.
 Then,
\begin_inset Formula 
\begin{align*}
\frac{4}{q(k)+1} & \geq\frac{4}{q(k-1)+1}-\frac{1}{4}\big(\frac{4}{q(k-1)+1}\big)^{2}\\
 & =\frac{4}{q(k-1)+1}-\frac{4}{(q(k-1)+1)^{2}}\\
 & =4\frac{q(k-1)}{(q(k-1)+1)^{2}}.
\end{align*}

\end_inset

We cancel the 4s and flip the numerator and denominator to obtain
\begin_inset Formula 
\begin{align*}
q(k)+1 & \leq q(k-1)+2+\frac{1}{q(k-1)}\\
q(k) & \leq q(k-1)+1+\frac{1}{q(k-1)}.
\end{align*}

\end_inset

What do we know about 
\begin_inset Formula $q$
\end_inset

? For a base case, 
\begin_inset Formula $q(0)=3$
\end_inset

 because 
\begin_inset Formula $p(0)=1$
\end_inset

.
 Also, 
\begin_inset Formula $q$
\end_inset

 is increasing, so 
\begin_inset Formula $q(k)\geq3$
\end_inset

 
\begin_inset Formula $\forall k$
\end_inset

.
 The right-hand-side is between 
\begin_inset Formula $q(k-1)+1$
\end_inset

 and 
\begin_inset Formula $q(k-1)+2$
\end_inset

, which implies 
\begin_inset Formula $q(k)\leq2k$
\end_inset

.
 Thus
\begin_inset Formula 
\begin{align*}
p(k) & =\frac{4}{q(k)+1}\\
 & =\Omega(1/k).
\end{align*}

\end_inset

Because 
\begin_inset Formula $k=\log_{\sqrt{2}}n$
\end_inset

,
\begin_inset Formula 
\[
P(n)=\Omega(1/\log n).
\]

\end_inset

Finally, we have that Fast-Cut succeeds with probability at least 
\begin_inset Formula $\Omega(1/\log n)$
\end_inset

.
 By running it 
\begin_inset Formula $\Omega(\alpha\log^{2}n)$
\end_inset

 times with independent randomness, we can improve the success probability
 to 
\begin_inset Formula $1-n^{-\alpha}$
\end_inset

.
 Each takes time 
\begin_inset Formula $\O(n^{2}\log n)$
\end_inset

, so the total running time is 
\begin_inset Formula $\O(n^{2}\log^{3}n)$
\end_inset

.
\end_layout

\begin_layout Standard
Notice that we did not prove that there are only 
\begin_inset Formula $\O(\log n)$
\end_inset

 minimum cuts, because tie-breaking rules may make some cuts much less likely
 than others to be returned.
\end_layout

\end_body
\end_document
